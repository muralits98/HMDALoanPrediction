(100000, 19)
(84157, 19)
Building Plain baseline Models

 Naive Bayes Classifier: 

('Balanced Accuracy is ', 66.50367362540159)
Cross Validation Balanced Accuracy: 66.77% (1.09%)

 Random Forest: 

('Balanced Accuracy is ', 68.5084445423788)
Cross Validation Balanced Accuracy: 67.74% (1.00%)

 XGBoost Classifier: 

('Balanced Accuracy is ', 71.8967113145826)
Cross Validation Balanced Accuracy: 71.42% (0.97%)
('loan_type', 6.222639)
('property_type', 20.45212)
('loan_purpose', 17.138062)
('owner_occupancy', 1.5524423)
('loan_amount_000s', 12.671291)
('applicant_ethnicity', 5.7799807)
('co_applicant_ethnicity', 2.8796291)
('applicant_sex', 1.2834206)
('co_applicant_sex', 1.7770753)
('applicant_income_000s', 9.796075)
('hoepa_status', 2.8530712)
('lien_status', 5.403702)
('population', 1.0039167)
('minority_population', 5.312471)
('hud_median_family_income', 1.8245124)
('tract_to_msamd_income', 2.08488)
('number_of_1_to_4_family_units', 1.0398763)

 Logistic Classifier: 

('Balanced Accuracy is ', 70.06185569003006)
Cross Validation Balanced Accuracy: 69.34% (1.33%)

 SVM: 

('Balanced Accuracy is ', 55.196303203782136)
Cross Validation Balanced Accuracy: 55.40% (0.64%)
('Best picked model is', 'SVM')
Building Tuned Models

 Random Forest 

{'n_estimators': 150, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 5}
{'rank_test_score': array([36, 49, 47, 42, 21, 33,  1, 25, 35, 23,  8, 15, 45, 32, 24, 10, 25,
       43, 28, 12, 48, 29,  7, 18, 38,  9, 39,  3,  4, 29, 17, 12, 16, 40,
       37,  6, 31, 41, 46, 14, 33, 21, 43, 11,  5,  2, 20, 27, 50, 19]), 'split0_train_score': array([0.91475916, 0.95332404, 0.95675756, 0.9125199 , 0.88316083,
       0.88067277, 0.86141521, 0.90968352, 0.96496815, 0.91391322,
       0.86141521, 0.88515127, 0.94740247, 0.92053145, 0.85569268,
       0.87967755, 0.91839172, 0.96392317, 0.91127588, 0.88719148,
       0.95108479, 0.9167496 , 0.88714172, 0.91983479, 0.9584992 ,
       0.88087182, 0.90998209, 0.88465366, 0.86146497, 0.85300557,
       0.88067277, 0.86076831, 0.90883758, 0.88042396, 0.95810111,
       0.88201632, 0.95611067, 0.95695661, 0.95964371, 0.8618133 ,
       0.9113754 , 0.88485271, 0.96501791, 0.88554936, 0.85718551,
       0.86196258, 0.85255772, 0.95984275, 0.94337182, 0.92063097]), 'split2_test_score': array([0.70342357, 0.69665605, 0.70501592, 0.70800159, 0.71019108,
       0.70999204, 0.71457006, 0.70859873, 0.70441879, 0.70621019,
       0.71317675, 0.71039013, 0.70203025, 0.7058121 , 0.71118631,
       0.71198248, 0.70640924, 0.70282643, 0.7076035 , 0.70999204,
       0.69804936, 0.70879777, 0.71118631, 0.70820064, 0.70163217,
       0.71238057, 0.69884554, 0.71078822, 0.71198248, 0.70959395,
       0.70919586, 0.70999204, 0.70839968, 0.70421975, 0.69964172,
       0.7133758 , 0.70640924, 0.70262739, 0.70342357, 0.71058917,
       0.7058121 , 0.70999204, 0.70083599, 0.70999204, 0.70859873,
       0.71019108, 0.7076035 , 0.70421975, 0.69705414, 0.70700637]), 'param_min_samples_leaf': masked_array(data=[3, 2, 2, 3, 4, 4, 5, 3, 2, 3, 5, 4, 2, 3, 5, 4, 3, 2,
                   3, 4, 2, 3, 4, 3, 2, 4, 3, 4, 5, 5, 4, 5, 3, 4, 2, 4,
                   2, 2, 2, 5, 3, 4, 2, 4, 5, 5, 5, 2, 2, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'mean_fit_time': array([1.448     , 1.14920001, 1.55440001, 1.44179997, 1.40220003,
       1.40800009, 3.92319999, 3.2395999 , 9.36539998, 4.33600001,
       5.2026    , 6.93119998, 2.24040003, 7.16019993, 1.98719997,
       4.25019994, 5.83439999, 4.57579999, 4.27359996, 5.4414    ,
       1.52379999, 2.86499996, 8.15499997, 2.86899996, 3.38439994,
       6.11820006, 2.15699997, 2.71539998, 6.50720005, 1.00040002,
       5.31619997, 7.81400003, 2.14300003, 1.35599995, 3.39060001,
       4.10779996, 4.65000005, 2.25759997, 1.53579998, 6.475     ,
       3.21359987, 2.71079998, 9.17700005, 6.80559993, 2.98680005,
       7.78740001, 0.9948    , 5.71619997, 1.12660007, 8.60820007]), 'split3_train_score': array([0.91719745, 0.95138336, 0.95720541, 0.91635151, 0.88261346,
       0.88425557, 0.8620621 , 0.91475916, 0.96491839, 0.9156051 ,
       0.86380374, 0.88863455, 0.9471039 , 0.92197452, 0.86032046,
       0.88186704, 0.92117834, 0.96203225, 0.91421178, 0.88903264,
       0.94819865, 0.92073049, 0.88948049, 0.92053145, 0.95635947,
       0.88321059, 0.91276871, 0.88763933, 0.86380374, 0.85619029,
       0.88246417, 0.86445064, 0.91470939, 0.88569865, 0.95606091,
       0.88530056, 0.95486664, 0.95516521, 0.95685709, 0.86405255,
       0.91475916, 0.88773885, 0.96357484, 0.88982882, 0.85862858,
       0.86420183, 0.85977309, 0.95790207, 0.94386943, 0.92272094]), 'param_min_samples_split': masked_array(data=[3, 2, 2, 3, 4, 3, 4, 5, 4, 4, 5, 3, 5, 5, 3, 4, 4, 2,
                   3, 2, 5, 3, 4, 4, 3, 5, 4, 2, 5, 5, 3, 2, 3, 3, 4, 5,
                   5, 2, 2, 2, 3, 3, 3, 3, 2, 4, 4, 3, 5, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'std_test_score': array([0.00534745, 0.00431224, 0.00261227, 0.00231645, 0.00373313,
       0.0022463 , 0.00391668, 0.00282783, 0.00498264, 0.00449858,
       0.00440316, 0.00430526, 0.00326724, 0.00333208, 0.00391344,
       0.00351042, 0.00307999, 0.00389355, 0.00232942, 0.00400471,
       0.00395814, 0.00517118, 0.00444472, 0.0036973 , 0.00535071,
       0.0042467 , 0.00615379, 0.00191331, 0.00417406, 0.00206623,
       0.00350454, 0.00397492, 0.00483904, 0.00578997, 0.00654055,
       0.00433607, 0.00340733, 0.00404604, 0.00405113, 0.00434702,
       0.00300393, 0.00565006, 0.0045782 , 0.00464316, 0.00472604,
       0.00547369, 0.00490086, 0.00475479, 0.00420243, 0.00322821]), 'params': [{'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 150, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 200, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 150, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 200, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 3}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 150, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 300, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 250, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 300, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 100, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 150, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 300, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 50, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 300, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}], 'std_fit_time': array([0.01846075, 0.0236677 , 0.03580838, 0.0090642 , 0.0467478 ,
       0.0648351 , 0.03804419, 0.0379136 , 0.19927938, 0.04316013,
       0.05059088, 0.0914602 , 0.03003073, 0.09203351, 0.01154819,
       0.15071875, 0.06144785, 0.02574023, 0.03348797, 0.07083676,
       0.02790984, 0.05953144, 0.04084609, 0.03784709, 0.02956078,
       0.03380766, 0.02396653, 0.02426194, 0.06021098, 0.01369084,
       0.19559796, 0.05788612, 0.02244988, 0.01366748, 0.0146096 ,
       0.05390145, 0.07237679, 0.04108335, 0.01804877, 0.06754546,
       0.06286684, 0.01357056, 0.03256997, 0.02231235, 0.02668626,
       0.05177109, 0.0132725 , 0.12842173, 0.02378737, 0.06376022]), 'std_score_time': array([0.00391921, 0.00126489, 0.00287044, 0.00159998, 0.00162485,
       0.00402003, 0.00215414, 0.00260766, 0.00387818, 0.00798988,
       0.00714424, 0.00778198, 0.00904659, 0.0044    , 0.0010198 ,
       0.00724978, 0.00586518, 0.00357777, 0.00427083, 0.00319995,
       0.00252979, 0.00654222, 0.00744578, 0.0018547 , 0.00287053,
       0.00616441, 0.00265328, 0.00624178, 0.00280002, 0.0010198 ,
       0.00293933, 0.00331059, 0.0028    , 0.00299329, 0.00320004,
       0.00444524, 0.00435424, 0.00257674, 0.00318743, 0.00667539,
       0.00312411, 0.0011662 , 0.00663332, 0.0093252 , 0.00224502,
       0.00818298, 0.00074828, 0.01637812, 0.00146977, 0.00656049]), 'std_train_score': array([0.00121295, 0.00117478, 0.00054054, 0.00203411, 0.00122109,
       0.00214871, 0.00130583, 0.0028278 , 0.00070048, 0.00086441,
       0.0017075 , 0.0017011 , 0.00115334, 0.00155376, 0.00216753,
       0.00173054, 0.00190335, 0.0007523 , 0.00150493, 0.00164064,
       0.00136661, 0.00210122, 0.00096419, 0.00136277, 0.00080766,
       0.00133427, 0.00222352, 0.00191704, 0.00113935, 0.00227556,
       0.00169434, 0.00210084, 0.00186948, 0.00262426, 0.00083088,
       0.00165955, 0.00092261, 0.00093169, 0.0014255 , 0.00116547,
       0.00157673, 0.0018304 , 0.00063958, 0.00144098, 0.00109854,
       0.00195794, 0.00247461, 0.00121425, 0.00084717, 0.00106791]), 'split4_test_score': array([0.71795382, 0.70780255, 0.70322452, 0.71058917, 0.71596338,
       0.71158439, 0.72093949, 0.71377389, 0.71058917, 0.71775478,
       0.71934713, 0.71914809, 0.70879777, 0.71397293, 0.71715764,
       0.71755573, 0.71297771, 0.70899682, 0.71238057, 0.71835191,
       0.70660828, 0.71417197, 0.71875   , 0.71795382, 0.71596338,
       0.71954618, 0.71317675, 0.71576433, 0.71835191, 0.71257962,
       0.71656051, 0.71934713, 0.71616242, 0.71437102, 0.71257962,
       0.72014331, 0.71178344, 0.71238057, 0.71118631, 0.71675955,
       0.71138535, 0.7205414 , 0.71317675, 0.71954618, 0.72133758,
       0.72273089, 0.71596338, 0.71636146, 0.70501592, 0.71576433]), 'param_criterion': masked_array(data=['entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'gini', 'entropy', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'entropy', 'gini', 'entropy',
                   'gini', 'gini', 'gini', 'entropy'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_train_score': array([0.91515725, 0.9504379 , 0.95765326, 0.91416202, 0.88405653,
       0.88241441, 0.86141521, 0.91052946, 0.9642715 , 0.91321656,
       0.86086783, 0.88823646, 0.94551154, 0.91774482, 0.85449841,
       0.88186704, 0.91789411, 0.96277866, 0.91202229, 0.88654459,
       0.9504379 , 0.91555533, 0.88823646, 0.91724721, 0.95755374,
       0.88087182, 0.90938495, 0.88345939, 0.86236067, 0.85270701,
       0.88047373, 0.86275876, 0.91127588, 0.88067277, 0.95625995,
       0.88027468, 0.9546676 , 0.95486664, 0.9582504 , 0.86226115,
       0.91122611, 0.88390725, 0.96402269, 0.88714172, 0.85857882,
       0.86246019, 0.85395104, 0.95665804, 0.94411823, 0.92068073]), 'split2_train_score': array([0.91774482, 0.95352309, 0.95834992, 0.9167496 , 0.88395701,
       0.88674363, 0.86420183, 0.91436107, 0.96641123, 0.91510748,
       0.86529658, 0.89027667, 0.94914411, 0.92142715, 0.8578324 ,
       0.88271298, 0.92257166, 0.96407245, 0.91510748, 0.88903264,
       0.95237858, 0.9200836 , 0.88987858, 0.92117834, 0.95859873,
       0.88296178, 0.91510748, 0.88833599, 0.8636047 , 0.8584793 ,
       0.88161823, 0.86554538, 0.91152468, 0.88604697, 0.9576035 ,
       0.88311107, 0.95715565, 0.95690685, 0.96098726, 0.86395303,
       0.91416202, 0.88873408, 0.96466959, 0.88863455, 0.86046975,
       0.86534634, 0.85534435, 0.95949443, 0.94277468, 0.92316879]), 'param_n_estimators': masked_array(data=[50, 50, 50, 50, 50, 50, 150, 150, 300, 200, 200, 250,
                   100, 250, 100, 200, 200, 150, 200, 200, 50, 100, 300,
                   100, 150, 300, 100, 100, 250, 50, 250, 300, 100, 50,
                   150, 200, 150, 100, 50, 250, 150, 100, 300, 250, 150,
                   300, 50, 250, 50, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split4_train_score': array([0.91520701, 0.95178145, 0.95780255, 0.9182922 , 0.88619626,
       0.88540008, 0.86430135, 0.91729697, 0.96506768, 0.91401274,
       0.86430135, 0.88903264, 0.94735271, 0.92177548, 0.85927548,
       0.88505175, 0.92197452, 0.96312699, 0.91456011, 0.89122213,
       0.95098527, 0.92023288, 0.88878384, 0.92038217, 0.95785231,
       0.88420581, 0.91396298, 0.88445462, 0.86469944, 0.85708599,
       0.88515127, 0.86673965, 0.91187301, 0.88594745, 0.95775279,
       0.88345939, 0.95621019, 0.95685709, 0.95984275, 0.86489849,
       0.91456011, 0.88739053, 0.96332604, 0.88808718, 0.85957404,
       0.86733678, 0.8566879 , 0.95949443, 0.9453125 , 0.92247213]), 'mean_score_time': array([0.04419999, 0.04499998, 0.04660006, 0.04219999, 0.04140005,
       0.04319997, 0.11940002, 0.1230001 , 0.26339998, 0.1684001 ,
       0.1546    , 0.21020002, 0.09260006, 0.2052    , 0.07539997,
       0.15780005, 0.16800003, 0.13200006, 0.16440001, 0.15960002,
       0.04500003, 0.08499994, 0.23860006, 0.08360004, 0.13140001,
       0.23599992, 0.08339996, 0.08380003, 0.19039993, 0.03959994,
       0.19440002, 0.23319993, 0.08259997, 0.04179997, 0.13040004,
       0.15880013, 0.13179998, 0.08740001, 0.04720006, 0.19419999,
       0.12520008, 0.07979999, 0.26600008, 0.20280008, 0.11260004,
       0.23280001, 0.03880005, 0.22259994, 0.04419999, 0.25239997]), 'mean_train_score': array([0.91601314, 0.95208997, 0.95755374, 0.91561505, 0.88399682,
       0.88389729, 0.86267914, 0.91332604, 0.96512739, 0.91437102,
       0.86313694, 0.88826632, 0.94730295, 0.92069068, 0.85752389,
       0.88223527, 0.92040207, 0.9631867 , 0.91343551, 0.8886047 ,
       0.95061704, 0.91867038, 0.88870422, 0.91983479, 0.95777269,
       0.88242436, 0.91224124, 0.8857086 , 0.8631867 , 0.85549363,
       0.88207604, 0.86405255, 0.91164411, 0.88375796, 0.95715565,
       0.8828324 , 0.95580215, 0.95615048, 0.95911624, 0.8633957 ,
       0.91321656, 0.88652468, 0.96412221, 0.88784833, 0.85888734,
       0.86426154, 0.85566282, 0.95867834, 0.94388933, 0.92193471]), 'split0_test_score': array([0.71218153, 0.7076035 , 0.71019108, 0.71078822, 0.71496815,
       0.71257962, 0.71417197, 0.71397293, 0.71755573, 0.71476911,
       0.71437102, 0.71556529, 0.71198248, 0.71377389, 0.71277866,
       0.71616242, 0.71536624, 0.71397293, 0.71317675, 0.71596338,
       0.70999204, 0.71795382, 0.71735669, 0.71357484, 0.7133758 ,
       0.71556529, 0.71675955, 0.71576433, 0.71636146, 0.71257962,
       0.71596338, 0.7151672 , 0.71914809, 0.71596338, 0.71675955,
       0.71496815, 0.71596338, 0.71257962, 0.71178344, 0.71815287,
       0.71476911, 0.71357484, 0.71238057, 0.7169586 , 0.7151672 ,
       0.71775478, 0.71815287, 0.71596338, 0.7093949 , 0.71476911]), 'mean_test_score': array([0.70903662, 0.70386146, 0.70513535, 0.70808121, 0.71122611,
       0.70995223, 0.71417197, 0.71090764, 0.70951433, 0.71098726,
       0.71301752, 0.7125    , 0.7071258 , 0.71007166, 0.71094745,
       0.71289809, 0.71090764, 0.70768312, 0.71023089, 0.71277866,
       0.70429936, 0.71015127, 0.71305732, 0.71170382, 0.70871815,
       0.71297771, 0.70867834, 0.71377389, 0.71333599, 0.71015127,
       0.71198248, 0.71277866, 0.71226115, 0.70863854, 0.70883758,
       0.71313694, 0.71011146, 0.70859873, 0.70672771, 0.71261943,
       0.70995223, 0.71122611, 0.70768312, 0.71281847, 0.71321656,
       0.71405255, 0.71146497, 0.71066879, 0.7035828 , 0.71166401]), 'param_max_features': masked_array(data=['sqrt', 'sqrt', 'log2', 'auto', 'log2', 'log2', 'log2',
                   'log2', 'log2', 'log2', 'sqrt', 'log2', 'log2', 'log2',
                   'sqrt', 'sqrt', 'log2', 'sqrt', 'log2', 'sqrt', 'log2',
                   'sqrt', 'log2', 'auto', 'log2', 'log2', 'auto', 'auto',
                   'sqrt', 'auto', 'log2', 'auto', 'auto', 'auto', 'auto',
                   'sqrt', 'auto', 'auto', 'sqrt', 'auto', 'log2', 'sqrt',
                   'sqrt', 'auto', 'sqrt', 'log2', 'log2', 'log2', 'log2',
                   'log2'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split3_test_score': array([0.70501592, 0.70123408, 0.70322452, 0.70541401, 0.70601115,
       0.70601115, 0.70899682, 0.70680732, 0.7040207 , 0.70720541,
       0.70561306, 0.70700637, 0.70640924, 0.70720541, 0.70720541,
       0.70800159, 0.70919586, 0.70441879, 0.71039013, 0.70720541,
       0.70342357, 0.70501592, 0.70660828, 0.71058917, 0.70441879,
       0.70740446, 0.70859873, 0.71257962, 0.70621019, 0.70800159,
       0.70879777, 0.70839968, 0.70601115, 0.70083599, 0.70262739,
       0.70820064, 0.70820064, 0.71039013, 0.70183121, 0.70621019,
       0.70839968, 0.70362261, 0.70621019, 0.70720541, 0.70879777,
       0.7076035 , 0.71039013, 0.70780255, 0.70103503, 0.70979299]), 'split1_test_score': array([0.70660828, 0.70601115, 0.7040207 , 0.70561306, 0.70899682,
       0.70959395, 0.71218153, 0.71138535, 0.71098726, 0.70899682,
       0.71257962, 0.71039013, 0.70640924, 0.70959395, 0.70640924,
       0.71078822, 0.71058917, 0.70820064, 0.7076035 , 0.71238057,
       0.70342357, 0.70481688, 0.71138535, 0.70820064, 0.70820064,
       0.70999204, 0.70601115, 0.71397293, 0.71377389, 0.70800159,
       0.7093949 , 0.71098726, 0.71158439, 0.70780255, 0.71257962,
       0.70899682, 0.70820064, 0.70501592, 0.70541401, 0.71138535,
       0.7093949 , 0.70839968, 0.7058121 , 0.71039013, 0.71218153,
       0.71198248, 0.70521497, 0.70899682, 0.70541401, 0.71098726])}
('The best Random Forest Balanced Accuracy is ', 71.81490069529362)

 XGBoost 

{'grow_policy': 'lossguide', 'eta': 0.2, 'alpha': 0.4, 'lambda': 1, 'max_depth': 150, 'booster': 'gbtree'}
{'rank_test_score': array([1, 1, 1, 8, 1, 1, 8, 1, 1, 8]), 'split0_train_score': array([0.9991043 , 0.9991043 , 0.9991043 , 0.64893511, 0.9991043 ,
       0.9991043 , 0.64893511, 0.9991043 , 0.9991043 , 0.64893511]), 'split2_test_score': array([0.68132962, 0.68132962, 0.68132962, 0.65007962, 0.68132962,
       0.68132962, 0.65007962, 0.68132962, 0.68132962, 0.65007962]), 'mean_fit_time': array([15.28260002, 15.4132    , 15.25740008,  1.03059993, 39.65700006,
       39.54979997,  1.00959997, 39.77180009, 40.62240005,  1.01720004]), 'split3_train_score': array([0.99925358, 0.99925358, 0.99925358, 0.64938296, 0.99925358,
       0.99925358, 0.64938296, 0.99925358, 0.99925358, 0.64938296]), 'mean_score_time': array([0.14780006, 0.1402    , 0.14199996, 0.00420008, 0.15939994,
       0.14280005, 0.00380011, 0.14479995, 0.13860002, 0.00379996]), 'std_test_score': array([0.00651895, 0.00651895, 0.00651895, 0.00455042, 0.00651895,
       0.00651895, 0.00455042, 0.00651895, 0.00651895, 0.00455042]), 'param_lambda': masked_array(data=[1, 0.4, 1, 0.8, 1, 1, 1, 0, 0.8, 0.4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_eta': masked_array(data=[0.2, 0, 0.8, 0.6, 0.4, 0.2, 0.4, 0.4, 0.4, 0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'grow_policy': 'lossguide', 'eta': 0.2, 'alpha': 0.4, 'lambda': 1, 'max_depth': 150, 'booster': 'gbtree'}, {'grow_policy': 'depthwise', 'eta': 0, 'alpha': 0.4, 'lambda': 0.4, 'max_depth': 200, 'booster': 'gbtree'}, {'grow_policy': 'lossguide', 'eta': 0.8, 'alpha': 0.2, 'lambda': 1, 'max_depth': 200, 'booster': 'gbtree'}, {'grow_policy': 'depthwise', 'eta': 0.6, 'alpha': 0.4, 'lambda': 0.8, 'max_depth': 50, 'booster': 'gblinear'}, {'grow_policy': 'depthwise', 'eta': 0.4, 'alpha': 0.6, 'lambda': 1, 'max_depth': 300, 'booster': 'dart'}, {'grow_policy': 'depthwise', 'eta': 0.2, 'alpha': 0.6, 'lambda': 1, 'max_depth': 300, 'booster': 'dart'}, {'grow_policy': 'lossguide', 'eta': 0.4, 'alpha': 0.8, 'lambda': 1, 'max_depth': 100, 'booster': 'gblinear'}, {'grow_policy': 'lossguide', 'eta': 0.4, 'alpha': 1, 'lambda': 0, 'max_depth': 200, 'booster': 'dart'}, {'grow_policy': 'depthwise', 'eta': 0.4, 'alpha': 0, 'lambda': 0.8, 'max_depth': 100, 'booster': 'dart'}, {'grow_policy': 'lossguide', 'eta': 0, 'alpha': 0.6, 'lambda': 0.4, 'max_depth': 300, 'booster': 'gblinear'}], 'std_fit_time': array([0.18526797, 0.08769811, 0.25048485, 0.03478848, 0.63443582,
       0.37206588, 0.01635363, 0.58799   , 0.40776147, 0.0108333 ]), 'std_score_time': array([0.00941065, 0.01581651, 0.01627263, 0.00097979, 0.02368621,
       0.02317244, 0.00040004, 0.02725725, 0.0094148 , 0.00039997]), 'std_train_score': array([5.97133758e-05, 5.97133758e-05, 5.97133758e-05, 1.60060810e-03,
       5.97133758e-05, 5.97133758e-05, 1.60060810e-03, 5.97133758e-05,
       5.97133758e-05, 1.60060810e-03]), 'split4_test_score': array([0.69406847, 0.69406847, 0.69406847, 0.65485669, 0.69406847,
       0.69406847, 0.65485669, 0.69406847, 0.69406847, 0.65485669]), 'param_max_depth': masked_array(data=[150, 200, 200, 50, 300, 300, 100, 200, 100, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_train_score': array([0.99925358, 0.99925358, 0.99925358, 0.64798965, 0.99925358,
       0.99925358, 0.64798965, 0.99925358, 0.99925358, 0.64798965]), 'split2_train_score': array([0.99915406, 0.99915406, 0.99915406, 0.64649682, 0.99915406,
       0.99915406, 0.64649682, 0.99915406, 0.99915406, 0.64649682]), 'param_grow_policy': masked_array(data=['lossguide', 'depthwise', 'lossguide', 'depthwise',
                   'depthwise', 'depthwise', 'lossguide', 'lossguide',
                   'depthwise', 'lossguide'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split4_train_score': array([0.99915406, 0.99915406, 0.99915406, 0.64505374, 0.99915406,
       0.99915406, 0.64505374, 0.99915406, 0.99915406, 0.64505374]), 'param_booster': masked_array(data=['gbtree', 'gbtree', 'gbtree', 'gblinear', 'dart',
                   'dart', 'gblinear', 'dart', 'dart', 'gblinear'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'mean_train_score': array([0.99918392, 0.99918392, 0.99918392, 0.64757166, 0.99918392,
       0.99918392, 0.64757166, 0.99918392, 0.99918392, 0.64757166]), 'split0_test_score': array([0.70083599, 0.70083599, 0.70083599, 0.64589968, 0.70083599,
       0.70083599, 0.64589968, 0.70083599, 0.70083599, 0.64589968]), 'mean_test_score': array([0.6906051 , 0.6906051 , 0.6906051 , 0.64737261, 0.6906051 ,
       0.6906051 , 0.64737261, 0.6906051 , 0.6906051 , 0.64737261]), 'split3_test_score': array([0.68829618, 0.68829618, 0.68829618, 0.64291401, 0.68829618,
       0.68829618, 0.64291401, 0.68829618, 0.68829618, 0.64291401]), 'param_alpha': masked_array(data=[0.4, 0.4, 0.2, 0.4, 0.6, 0.6, 0.8, 1, 0, 0.6],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_test_score': array([0.68849522, 0.68849522, 0.68849522, 0.64311306, 0.68849522,
       0.68849522, 0.64311306, 0.68849522, 0.68849522, 0.64311306])}
('The best XGBoost Balanced Accuracy is ', 69.2971704301726)
logistic Regression 

{'penalty': 'l1', 'C': 2}
{'std_train_score': array([0.00138103, 0.00224422, 0.00130999, 0.00260425, 0.00130317,
       0.00370103, 0.00128711, 0.00251526]), 'split4_test_score': array([0.70680732, 0.70262739, 0.70740446, 0.70003981, 0.70601115,
       0.69785032, 0.70601115, 0.70382166]), 'split0_train_score': array([0.6988953 , 0.69595939, 0.69904459, 0.6962082 , 0.69780056,
       0.69098328, 0.69894506, 0.68983877]), 'rank_test_score': array([2, 5, 1, 7, 4, 8, 3, 6]), 'split2_train_score': array([0.69760151, 0.69551154, 0.6979996 , 0.69451632, 0.69834793,
       0.68869427, 0.69834793, 0.69466561]), 'std_score_time': array([4.00018706e-04, 9.53674316e-08, 9.53674316e-08, 9.53674316e-08,
       4.00066376e-04, 9.53674316e-08, 6.32485093e-04, 4.89842988e-04]), 'split4_train_score': array([0.69610868, 0.69118232, 0.69615844, 0.68978901, 0.69590963,
       0.68794785, 0.69590963, 0.69232683]), 'split2_test_score': array([0.70242834, 0.7004379 , 0.70322452, 0.69824841, 0.70382166,
       0.68809713, 0.70362261, 0.69924363]), 'mean_score_time': array([0.00219998, 0.00200005, 0.00200005, 0.00200005, 0.00180006,
       0.00200005, 0.002     , 0.00159998]), 'mean_fit_time': array([7.42740002, 0.57500005, 7.81859999, 0.55519996, 5.82339997,
       0.48399997, 5.96599998, 0.55      ]), 'split3_train_score': array([0.69914411, 0.69461584, 0.69919387, 0.69481489, 0.69919387,
       0.69650677, 0.69909435, 0.69635748]), 'param_C': masked_array(data=[1, 1, 2, 2, 3, 3, 4, 4],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2'],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'std_test_score': array([0.00558943, 0.0063137 , 0.00598671, 0.00552097, 0.00569615,
       0.00394691, 0.00565455, 0.0063637 ]), 'split1_train_score': array([0.70008957, 0.69804936, 0.69994029, 0.69745223, 0.69964172,
       0.69645701, 0.6995422 , 0.69635748]), 'split0_test_score': array([0.69625796, 0.69466561, 0.69585987, 0.69426752, 0.69506369,
       0.69386943, 0.69605892, 0.68789809]), 'mean_test_score': array([0.6982086 , 0.69482484, 0.69836783, 0.69363057, 0.69808917,
       0.69148089, 0.69816879, 0.69402866]), 'params': [{'penalty': 'l1', 'C': 1}, {'penalty': 'l2', 'C': 1}, {'penalty': 'l1', 'C': 2}, {'penalty': 'l2', 'C': 2}, {'penalty': 'l1', 'C': 3}, {'penalty': 'l2', 'C': 3}, {'penalty': 'l1', 'C': 4}, {'penalty': 'l2', 'C': 4}], 'std_fit_time': array([3.22730622, 0.07372651, 3.14406875, 0.1005851 , 2.74405   ,
       0.04316486, 1.94972227, 0.09833212]), 'split3_test_score': array([0.69367038, 0.68511146, 0.69386943, 0.68451433, 0.69347134,
       0.68710191, 0.69347134, 0.68849522]), 'mean_train_score': array([0.69836783, 0.69506369, 0.69846736, 0.69455613, 0.69817874,
       0.69211783, 0.69836783, 0.69390924]), 'split1_test_score': array([0.69187898, 0.69128185, 0.69148089, 0.6910828 , 0.69207803,
       0.69048567, 0.69167994, 0.69068471])}
('The best Logistic Balanced Accuracy is ', 70.20615986123605)
('Best picked model is', 'Logistic')
(100000, 20)
(8646, 19)

 Naive Bayes Classifier: 

('Balanced Accuracy is ', 60.42885161441409)
Cross Validation Balanced Accuracy: 61.39% (3.11%)

 Random Forest: 

('Balanced Accuracy is ', 60.855800474224985)
Cross Validation Balanced Accuracy: 60.25% (1.86%)

 XGBoost Classifier: 

('Balanced Accuracy is ', 62.90477445039665)
Cross Validation Balanced Accuracy: 65.10% (3.65%)
('loan_type', 4.4483714)
('property_type', 7.1095705)
('loan_purpose', 3.4319088)
('owner_occupancy', 9.882479)
('loan_amount_000s', 15.109465)
('applicant_ethnicity', 5.3489776)
('co_applicant_ethnicity', 4.600506)
('applicant_sex', 3.776182)
('co_applicant_sex', 5.4447227)
('applicant_income_000s', 9.143023)
('lien_status', 4.3097625)
('population', 4.7304354)
('minority_population', 5.0475063)
('hud_median_family_income', 4.0162673)
('tract_to_msamd_income', 5.0253263)
('number_of_owner_occupied_units', 4.012183)
('number_of_1_to_4_family_units', 4.563319)

 Logistic Classifier: 

('Balanced Accuracy is ', 62.376979596616025)
Cross Validation Balanced Accuracy: 62.68% (3.13%)

 SVM: 

('Balanced Accuracy is ', 51.3108515558678)
Cross Validation Balanced Accuracy: 51.31% (1.47%)
('Best picked model is', 'SVM')

 Random Forest 

{'n_estimators': 50, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 5}
{'rank_test_score': array([47, 50, 43,  7, 24, 34, 11, 21, 35, 20,  3, 17, 46,  5, 19,  9, 28,
       21, 41, 15, 47, 41, 17, 44, 35, 13, 16, 32, 13, 26,  4, 24, 35, 38,
       49,  9, 38, 30, 38, 11, 26,  5, 30, 23,  7,  2,  1, 28, 44, 33]), 'split0_train_score': array([0.94860028, 0.97705369, 0.98256081, 0.94951813, 0.92290041,
       0.91280404, 0.89352914, 0.94997705, 0.98485544, 0.9490592 ,
       0.89352914, 0.92565397, 0.97292336, 0.95869665, 0.89215236,
       0.92152363, 0.95869665, 0.98210188, 0.9490592 , 0.92886645,
       0.97980725, 0.95548417, 0.93024323, 0.95135383, 0.97751262,
       0.919229  , 0.9472235 , 0.92335934, 0.89903626, 0.89352914,
       0.92060578, 0.90133089, 0.95318954, 0.91877008, 0.98164296,
       0.9173933 , 0.98026618, 0.97843047, 0.97843047, 0.89674162,
       0.94860028, 0.92335934, 0.98531436, 0.93116108, 0.89031666,
       0.89444699, 0.88480955, 0.98393759, 0.97338229, 0.95640202]), 'split2_test_score': array([0.62385321, 0.62568807, 0.63302752, 0.63853211, 0.6440367 ,
       0.62385321, 0.6440367 , 0.64036697, 0.63486239, 0.63853211,
       0.64954128, 0.63669725, 0.62752294, 0.65321101, 0.63853211,
       0.63669725, 0.6440367 , 0.64220183, 0.63119266, 0.64220183,
       0.61651376, 0.62201835, 0.64954128, 0.63669725, 0.63669725,
       0.6440367 , 0.6440367 , 0.6293578 , 0.63853211, 0.64036697,
       0.64036697, 0.64587156, 0.63669725, 0.64587156, 0.62018349,
       0.64036697, 0.62568807, 0.63669725, 0.63119266, 0.64770642,
       0.6293578 , 0.64954128, 0.63486239, 0.63302752, 0.6440367 ,
       0.63669725, 0.64587156, 0.63486239, 0.63119266, 0.62752294]), 'param_min_samples_leaf': masked_array(data=[3, 2, 2, 3, 4, 4, 5, 3, 2, 3, 5, 4, 2, 3, 5, 4, 3, 2,
                   3, 4, 2, 3, 4, 3, 2, 4, 3, 4, 5, 5, 4, 5, 3, 4, 2, 4,
                   2, 2, 2, 5, 3, 4, 2, 4, 5, 5, 5, 2, 2, 3],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'mean_fit_time': array([0.19860005, 0.1598    , 0.22559996, 0.19839997, 0.19459991,
       0.18859997, 0.55419998, 0.45740004, 1.27800007, 0.6296    ,
       0.74840002, 0.9967999 , 0.33220005, 1.00939994, 0.29000006,
       0.60539994, 0.81679997, 0.65320001, 0.61520004, 0.76319995,
       0.21739998, 0.39840002, 1.15100002, 0.404     , 0.48179998,
       0.89640002, 0.30900006, 0.38639998, 0.92019997, 0.14959998,
       0.75039997, 1.11279993, 0.30780001, 0.19140005, 0.48339992,
       0.59880004, 0.63559999, 0.32119999, 0.21500001, 0.92259998,
       0.48799996, 0.38779998, 1.28960004, 0.95659995, 0.44240007,
       1.11240001, 0.15      , 0.80200005, 0.15840006, 1.21899996]), 'split3_train_score': array([0.94589638, 0.97707474, 0.98441082, 0.94681339, 0.91609354,
       0.91517652, 0.90142137, 0.95002293, 0.98899587, 0.94864741,
       0.89821183, 0.92801467, 0.97203118, 0.95414947, 0.89408528,
       0.91884457, 0.96011004, 0.98670335, 0.9481889 , 0.92893168,
       0.97615773, 0.95277396, 0.92939019, 0.94956442, 0.98486933,
       0.9220541 , 0.94727189, 0.92572215, 0.89637781, 0.88445667,
       0.91792756, 0.90600642, 0.94314535, 0.91746905, 0.98349381,
       0.91517652, 0.98349381, 0.98074278, 0.97982577, 0.89867033,
       0.94910591, 0.92847318, 0.98762036, 0.92709766, 0.8959193 ,
       0.90279688, 0.88537368, 0.98532783, 0.96836314, 0.95369097]), 'param_min_samples_split': masked_array(data=[3, 2, 2, 3, 4, 3, 4, 5, 4, 4, 5, 3, 5, 5, 3, 4, 4, 2,
                   3, 2, 5, 3, 4, 4, 3, 5, 4, 2, 5, 5, 3, 2, 3, 3, 4, 5,
                   5, 2, 2, 2, 3, 3, 3, 3, 2, 4, 4, 3, 5, 2],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'std_test_score': array([0.00969788, 0.01470492, 0.01565343, 0.00690177, 0.00579547,
       0.01478674, 0.01554739, 0.00970872, 0.01483588, 0.01254941,
       0.00832751, 0.01288559, 0.00578582, 0.01172509, 0.01238781,
       0.01636299, 0.01050009, 0.01194789, 0.00987708, 0.00919017,
       0.01286455, 0.00813141, 0.0093531 , 0.00565984, 0.00829049,
       0.01064823, 0.01935087, 0.0121395 , 0.0095331 , 0.02141302,
       0.01267337, 0.00686482, 0.01503087, 0.01693664, 0.01767598,
       0.01750141, 0.01549818, 0.01438766, 0.01503804, 0.00730354,
       0.00870529, 0.00465672, 0.01904378, 0.00933058, 0.00863838,
       0.01260523, 0.01310636, 0.01481966, 0.01683755, 0.01805501]), 'params': [{'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 150, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 200, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 200, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 150, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 200, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 3}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 150, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 300, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 100, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 250, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 4}, {'n_estimators': 300, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 3}, {'n_estimators': 50, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 200, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 5, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 100, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'auto', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 5}, {'n_estimators': 150, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 3}, {'n_estimators': 100, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 4}, {'n_estimators': 300, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'sqrt', 'min_samples_leaf': 2}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 4}, {'n_estimators': 150, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'sqrt', 'min_samples_leaf': 5}, {'n_estimators': 300, 'min_samples_split': 4, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 50, 'min_samples_split': 4, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 5}, {'n_estimators': 250, 'min_samples_split': 3, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 50, 'min_samples_split': 5, 'criterion': 'gini', 'max_features': 'log2', 'min_samples_leaf': 2}, {'n_estimators': 300, 'min_samples_split': 2, 'criterion': 'entropy', 'max_features': 'log2', 'min_samples_leaf': 3}], 'std_fit_time': array([0.01048047, 0.0065544 , 0.0166805 , 0.01237088, 0.01535709,
       0.00845232, 0.02600304, 0.00326197, 0.0206397 , 0.01400852,
       0.01197657, 0.04737255, 0.00960008, 0.00968716, 0.00812398,
       0.00966652, 0.02943744, 0.01434428, 0.01228657, 0.0134223 ,
       0.00781282, 0.00682933, 0.01214908, 0.01093621, 0.01066582,
       0.00833301, 0.00433586, 0.00366606, 0.00837611, 0.00475815,
       0.01287792, 0.01611708, 0.00487442, 0.00549917, 0.01063199,
       0.00074835, 0.01092881, 0.00760008, 0.00357772, 0.01438887,
       0.03814184, 0.01012723, 0.02372006, 0.00884534, 0.01015088,
       0.01489428, 0.00712742, 0.00672298, 0.00816331, 0.00792456]), 'std_score_time': array([6.32409692e-04, 7.48328219e-04, 6.32485089e-04, 7.48353705e-04,
       4.89959789e-04, 7.48366451e-04, 3.99947177e-04, 7.99942017e-04,
       1.67334126e-03, 7.48404683e-04, 8.00025464e-04, 7.48328219e-04,
       4.89979242e-04, 8.00061231e-04, 4.89901382e-04, 1.01979545e-03,
       2.87051137e-03, 1.16800773e-07, 4.89920847e-04, 4.89920847e-04,
       4.89881921e-04, 1.54923496e-03, 9.79812484e-04, 4.89901382e-04,
       1.89740500e-03, 8.94468989e-04, 7.48366451e-04, 6.32485093e-04,
       7.48379193e-04, 7.48366451e-04, 4.71594254e-03, 3.55520517e-03,
       7.99965864e-04, 4.89901382e-04, 7.48200777e-04, 4.89920847e-04,
       7.48239015e-04, 6.32409692e-04, 3.99971008e-04, 9.79802753e-04,
       7.48379193e-04, 4.00042545e-04, 7.48302736e-04, 4.89862441e-04,
       0.00000000e+00, 2.05921299e-03, 6.32409692e-04, 1.95957143e-03,
       3.99971008e-04, 9.79793021e-04]), 'std_train_score': array([0.00476846, 0.00260697, 0.00203982, 0.00105362, 0.00456202,
       0.00124232, 0.00288928, 0.00249099, 0.00135214, 0.00224319,
       0.00316705, 0.00174583, 0.00191104, 0.0021827 , 0.00233974,
       0.00202006, 0.00216191, 0.00218263, 0.00116036, 0.00384919,
       0.00339549, 0.00250951, 0.00250297, 0.00223851, 0.00244941,
       0.00109498, 0.00169314, 0.00205683, 0.00159467, 0.0049028 ,
       0.00264042, 0.00315746, 0.00419573, 0.00290654, 0.00130812,
       0.00143312, 0.00134765, 0.00155092, 0.00087332, 0.00164702,
       0.00162513, 0.00303001, 0.00151863, 0.00361319, 0.00293002,
       0.00301811, 0.00253186, 0.00151923, 0.00217155, 0.00163157]), 'split4_test_score': array([0.64705882, 0.65073529, 0.66176471, 0.65625   , 0.64889706,
       0.66360294, 0.66911765, 0.65808824, 0.64154412, 0.64338235,
       0.65808824, 0.65992647, 0.64338235, 0.66176471, 0.65441176,
       0.66727941, 0.64705882, 0.65808824, 0.63786765, 0.65441176,
       0.64154412, 0.63970588, 0.65441176, 0.64154412, 0.64889706,
       0.66176471, 0.66176471, 0.65625   , 0.65073529, 0.67279412,
       0.65625   , 0.64705882, 0.65808824, 0.65625   , 0.64889706,
       0.66176471, 0.65073529, 0.65257353, 0.65808824, 0.65257353,
       0.64889706, 0.64154412, 0.67095588, 0.64705882, 0.65992647,
       0.66360294, 0.67095588, 0.65808824, 0.66360294, 0.65257353]), 'param_criterion': masked_array(data=['entropy', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'entropy', 'entropy', 'gini', 'entropy', 'gini',
                   'gini', 'entropy', 'entropy', 'gini', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'gini', 'gini',
                   'entropy', 'gini', 'entropy', 'entropy', 'gini',
                   'entropy', 'entropy', 'entropy', 'gini', 'entropy',
                   'gini', 'gini', 'gini', 'entropy'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_train_score': array([0.95456631, 0.97246443, 0.97980725, 0.94951813, 0.91372189,
       0.91601652, 0.8981184 , 0.94446994, 0.98760899, 0.94446994,
       0.89857733, 0.92381827, 0.97567692, 0.95731987, 0.88802203,
       0.91968793, 0.95594309, 0.98760899, 0.94997705, 0.9261129 ,
       0.97797155, 0.95135383, 0.92381827, 0.95227168, 0.9807251 ,
       0.92014686, 0.94538779, 0.92106471, 0.89720055, 0.87976136,
       0.91372189, 0.89765948, 0.94492887, 0.91463974, 0.98439651,
       0.9173933 , 0.98164296, 0.97843047, 0.97843047, 0.90087196,
       0.95318954, 0.919229  , 0.98898577, 0.92519504, 0.88985773,
       0.89674162, 0.88205599, 0.98164296, 0.97430014, 0.95502524]), 'split2_train_score': array([0.93990826, 0.98027523, 0.9793578 , 0.94954128, 0.91376147,
       0.91330275, 0.90137615, 0.95      , 0.98761468, 0.95091743,
       0.90321101, 0.92568807, 0.97706422, 0.9587156 , 0.89036697,
       0.91651376, 0.9587156 , 0.98440367, 0.94678899, 0.92568807,
       0.9733945 , 0.95504587, 0.9266055 , 0.95229358, 0.98256881,
       0.91926606, 0.94633028, 0.92706422, 0.89495413, 0.8912844 ,
       0.92110092, 0.90137615, 0.94311927, 0.92247706, 0.98302752,
       0.91788991, 0.98027523, 0.97981651, 0.97706422, 0.90045872,
       0.94954128, 0.92201835, 0.98486239, 0.92798165, 0.89266055,
       0.9       , 0.88440367, 0.98348624, 0.97247706, 0.95733945]), 'param_n_estimators': masked_array(data=[50, 50, 50, 50, 50, 50, 150, 150, 300, 200, 200, 250,
                   100, 250, 100, 200, 200, 150, 200, 200, 50, 100, 300,
                   100, 150, 300, 100, 100, 250, 50, 250, 300, 100, 50,
                   150, 200, 150, 100, 50, 250, 150, 100, 300, 250, 150,
                   300, 50, 250, 50, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split4_train_score': array([0.94543787, 0.97478221, 0.97936726, 0.94864741, 0.92434663,
       0.9133425 , 0.89821183, 0.94543787, 0.98762036, 0.94635488,
       0.89637781, 0.92297111, 0.97294819, 0.95369097, 0.88812471,
       0.91609354, 0.95414947, 0.9825768 , 0.94727189, 0.91838606,
       0.97019716, 0.94864741, 0.92480514, 0.94635488, 0.98028427,
       0.92113709, 0.94268684, 0.92388812, 0.89912884, 0.88812471,
       0.91746905, 0.89729482, 0.95093994, 0.91471802, 0.98074278,
       0.91425951, 0.9830353 , 0.97615773, 0.97845025, 0.89729482,
       0.95048143, 0.92434663, 0.98624484, 0.92022008, 0.8872077 ,
       0.8959193 , 0.8784961 , 0.98120128, 0.97019716, 0.95827602]), 'mean_score_time': array([0.00699997, 0.00679994, 0.00700002, 0.00680003, 0.0066    ,
       0.00680008, 0.01719999, 0.01659999, 0.03599997, 0.02280002,
       0.0224    , 0.02920008, 0.01239991, 0.02840009, 0.01159992,
       0.0224    , 0.02440004, 0.01799998, 0.02259998, 0.02259998,
       0.00740004, 0.01299996, 0.03320003, 0.01240001, 0.01999993,
       0.03199997, 0.01219997, 0.01199999, 0.02720003, 0.00680008,
       0.0296    , 0.03440003, 0.01240001, 0.00639997, 0.01780009,
       0.02259998, 0.0178    , 0.01300001, 0.00679998, 0.02720003,
       0.01780005, 0.01219993, 0.03519998, 0.02840009, 0.01699996,
       0.03460002, 0.00600004, 0.03039994, 0.00679998, 0.03420005]), 'mean_train_score': array([0.94688182, 0.97633006, 0.98110079, 0.94880767, 0.91816479,
       0.91412847, 0.89853138, 0.94798156, 0.98733907, 0.94788977,
       0.89798142, 0.92522922, 0.97412877, 0.95651451, 0.89055027,
       0.91853269, 0.95752297, 0.98467894, 0.94825721, 0.92559703,
       0.97550564, 0.95266105, 0.92697246, 0.95036768, 0.98119203,
       0.92036662, 0.94578006, 0.92421971, 0.89733952, 0.88743126,
       0.91816504, 0.90073355, 0.94706459, 0.91761479, 0.98266072,
       0.91642251, 0.9817427 , 0.97871559, 0.97844024, 0.89880749,
       0.95018369, 0.9234853 , 0.98660554, 0.9263311 , 0.89119239,
       0.89798096, 0.8830278 , 0.98311918, 0.97174396, 0.95614674]), 'split0_test_score': array([0.62087912, 0.6043956 , 0.61355311, 0.64102564, 0.63186813,
       0.62271062, 0.62271062, 0.63003663, 0.60805861, 0.62087912,
       0.63369963, 0.62454212, 0.62820513, 0.62637363, 0.62087912,
       0.61904762, 0.62087912, 0.62087912, 0.61904762, 0.63003663,
       0.61721612, 0.63553114, 0.62820513, 0.63736264, 0.62271062,
       0.62820513, 0.60622711, 0.62087912, 0.64102564, 0.60622711,
       0.62820513, 0.62820513, 0.61538462, 0.60622711, 0.6025641 ,
       0.61355311, 0.60989011, 0.61538462, 0.61172161, 0.64102564,
       0.63003663, 0.64285714, 0.61355311, 0.62637363, 0.63369963,
       0.63186813, 0.63003663, 0.61721612, 0.61172161, 0.60805861]), 'mean_test_score': array([0.63229358, 0.62678899, 0.63486239, 0.64623853, 0.64036697,
       0.63633028, 0.64477064, 0.64110092, 0.6359633 , 0.64146789,
       0.64880734, 0.64220183, 0.63376147, 0.64697248, 0.64183486,
       0.64513761, 0.63963303, 0.64110092, 0.63522936, 0.6440367 ,
       0.63229358, 0.63522936, 0.64220183, 0.63412844, 0.6359633 ,
       0.64440367, 0.64256881, 0.63816514, 0.64440367, 0.64      ,
       0.64770642, 0.64036697, 0.6359633 , 0.63559633, 0.63155963,
       0.64513761, 0.63559633, 0.63926606, 0.63559633, 0.64477064,
       0.64      , 0.64697248, 0.63926606, 0.64073394, 0.64623853,
       0.64917431, 0.64954128, 0.63963303, 0.63412844, 0.63779817]), 'param_max_features': masked_array(data=['sqrt', 'sqrt', 'log2', 'auto', 'log2', 'log2', 'log2',
                   'log2', 'log2', 'log2', 'sqrt', 'log2', 'log2', 'log2',
                   'sqrt', 'sqrt', 'log2', 'sqrt', 'log2', 'sqrt', 'log2',
                   'sqrt', 'log2', 'auto', 'log2', 'log2', 'auto', 'auto',
                   'sqrt', 'auto', 'log2', 'auto', 'auto', 'auto', 'auto',
                   'sqrt', 'auto', 'auto', 'sqrt', 'auto', 'log2', 'sqrt',
                   'sqrt', 'auto', 'sqrt', 'log2', 'log2', 'log2', 'log2',
                   'log2'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split3_test_score': array([0.63051471, 0.625     , 0.62867647, 0.65257353, 0.63970588,
       0.63786765, 0.63602941, 0.64338235, 0.64522059, 0.65992647,
       0.65441176, 0.63602941, 0.63602941, 0.64522059, 0.65441176,
       0.65441176, 0.63602941, 0.63970588, 0.64889706, 0.63970588,
       0.64705882, 0.63235294, 0.63602941, 0.62683824, 0.63602941,
       0.64522059, 0.64522059, 0.64154412, 0.63235294, 0.63419118,
       0.64889706, 0.63786765, 0.64522059, 0.63051471, 0.63970588,
       0.65073529, 0.64522059, 0.63602941, 0.64154412, 0.63235294,
       0.64889706, 0.65441176, 0.63051471, 0.64705882, 0.64338235,
       0.65441176, 0.64889706, 0.63419118, 0.63602941, 0.64338235]), 'split1_test_score': array([0.63919414, 0.62820513, 0.63736264, 0.64285714, 0.63736264,
       0.63369963, 0.65201465, 0.63369963, 0.65018315, 0.64468864,
       0.64835165, 0.65384615, 0.63369963, 0.64835165, 0.64102564,
       0.64835165, 0.65018315, 0.64468864, 0.63919414, 0.65384615,
       0.63919414, 0.64652015, 0.64285714, 0.62820513, 0.63553114,
       0.64285714, 0.65567766, 0.64285714, 0.65934066, 0.64652015,
       0.66483516, 0.64285714, 0.62454212, 0.63919414, 0.64652015,
       0.65934066, 0.64652015, 0.65567766, 0.63553114, 0.65018315,
       0.64285714, 0.64652015, 0.64652015, 0.65018315, 0.65018315,
       0.65934066, 0.65201465, 0.65384615, 0.62820513, 0.65750916])}
('The best Random Forest Balanced Accuracy is ', 63.39070870290683)

 XGBoost 

{'grow_policy': 'depthwise', 'eta': 0.6, 'alpha': 0.4, 'lambda': 0.8, 'max_depth': 50, 'booster': 'gblinear'}
{'rank_test_score': array([4, 4, 4, 1, 4, 4, 1, 4, 4, 1]), 'split0_train_score': array([1.        , 1.        , 1.        , 0.63515374, 1.        ,
       1.        , 0.63515374, 1.        , 1.        , 0.63515374]), 'split2_test_score': array([0.61834862, 0.61834862, 0.61834862, 0.63486239, 0.61834862,
       0.61834862, 0.63486239, 0.61834862, 0.61834862, 0.63486239]), 'mean_fit_time': array([0.94700007, 0.94799991, 0.95899997, 0.10679994, 2.06240001,
       2.14419999, 0.12679992, 2.11240001, 2.1       , 0.10820003]), 'split3_train_score': array([1.        , 1.        , 1.        , 0.62815222, 1.        ,
       1.        , 0.62815222, 1.        , 1.        , 0.62815222]), 'mean_score_time': array([0.0079999 , 0.00819998, 0.00820003, 0.00180006, 0.00819998,
       0.00820007, 0.00160003, 0.00820003, 0.0079999 , 0.00139999]), 'std_test_score': array([0.02031223, 0.02031223, 0.02031223, 0.01236768, 0.02031223,
       0.02031223, 0.01236768, 0.02031223, 0.02031223, 0.01236768]), 'param_lambda': masked_array(data=[1, 0.4, 1, 0.8, 1, 1, 1, 0, 0.8, 0.4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_eta': masked_array(data=[0.2, 0, 0.8, 0.6, 0.4, 0.2, 0.4, 0.4, 0.4, 0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'grow_policy': 'lossguide', 'eta': 0.2, 'alpha': 0.4, 'lambda': 1, 'max_depth': 150, 'booster': 'gbtree'}, {'grow_policy': 'depthwise', 'eta': 0, 'alpha': 0.4, 'lambda': 0.4, 'max_depth': 200, 'booster': 'gbtree'}, {'grow_policy': 'lossguide', 'eta': 0.8, 'alpha': 0.2, 'lambda': 1, 'max_depth': 200, 'booster': 'gbtree'}, {'grow_policy': 'depthwise', 'eta': 0.6, 'alpha': 0.4, 'lambda': 0.8, 'max_depth': 50, 'booster': 'gblinear'}, {'grow_policy': 'depthwise', 'eta': 0.4, 'alpha': 0.6, 'lambda': 1, 'max_depth': 300, 'booster': 'dart'}, {'grow_policy': 'depthwise', 'eta': 0.2, 'alpha': 0.6, 'lambda': 1, 'max_depth': 300, 'booster': 'dart'}, {'grow_policy': 'lossguide', 'eta': 0.4, 'alpha': 0.8, 'lambda': 1, 'max_depth': 100, 'booster': 'gblinear'}, {'grow_policy': 'lossguide', 'eta': 0.4, 'alpha': 1, 'lambda': 0, 'max_depth': 200, 'booster': 'dart'}, {'grow_policy': 'depthwise', 'eta': 0.4, 'alpha': 0, 'lambda': 0.8, 'max_depth': 100, 'booster': 'dart'}, {'grow_policy': 'lossguide', 'eta': 0, 'alpha': 0.6, 'lambda': 0.4, 'max_depth': 300, 'booster': 'gblinear'}], 'std_fit_time': array([0.01122496, 0.01825377, 0.03286949, 0.00160001, 0.02514432,
       0.08637923, 0.02760725, 0.05135993, 0.01929769, 0.00231518]), 'std_score_time': array([0.        , 0.00040004, 0.00040002, 0.00039995, 0.0009798 ,
       0.00039999, 0.00048998, 0.0003999 , 0.        , 0.00048988]), 'std_train_score': array([0.        , 0.        , 0.        , 0.00323159, 0.        ,
       0.        , 0.00323159, 0.        , 0.        , 0.00323159]), 'split4_test_score': array([0.65992647, 0.65992647, 0.65992647, 0.63970588, 0.65992647,
       0.65992647, 0.63970588, 0.65992647, 0.65992647, 0.63970588]), 'param_max_depth': masked_array(data=[150, 200, 200, 50, 300, 300, 100, 200, 100, 300],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_train_score': array([1.        , 1.        , 1.        , 0.62689307, 1.        ,
       1.        , 0.62689307, 1.        , 1.        , 0.62689307]), 'split2_train_score': array([1.        , 1.        , 1.        , 0.62752294, 1.        ,
       1.        , 0.62752294, 1.        , 1.        , 0.62752294]), 'param_grow_policy': masked_array(data=['lossguide', 'depthwise', 'lossguide', 'depthwise',
                   'depthwise', 'depthwise', 'lossguide', 'lossguide',
                   'depthwise', 'lossguide'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split4_train_score': array([1.       , 1.       , 1.       , 0.6263182, 1.       , 1.       ,
       0.6263182, 1.       , 1.       , 0.6263182]), 'param_booster': masked_array(data=['gbtree', 'gbtree', 'gbtree', 'gblinear', 'dart',
                   'dart', 'gblinear', 'dart', 'dart', 'gblinear'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'mean_train_score': array([1.        , 1.        , 1.        , 0.62880803, 1.        ,
       1.        , 0.62880803, 1.        , 1.        , 0.62880803]), 'split0_test_score': array([0.5970696, 0.5970696, 0.5970696, 0.6043956, 0.5970696, 0.5970696,
       0.6043956, 0.5970696, 0.5970696, 0.6043956]), 'mean_test_score': array([0.62458716, 0.62458716, 0.62458716, 0.62825688, 0.62458716,
       0.62458716, 0.62825688, 0.62458716, 0.62458716, 0.62825688]), 'split3_test_score': array([0.62683824, 0.62683824, 0.62683824, 0.63235294, 0.62683824,
       0.62683824, 0.63235294, 0.62683824, 0.62683824, 0.63235294]), 'param_alpha': masked_array(data=[0.4, 0.4, 0.2, 0.4, 0.6, 0.6, 0.8, 1, 0, 0.6],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'split1_test_score': array([0.62087912, 0.62087912, 0.62087912, 0.63003663, 0.62087912,
       0.62087912, 0.63003663, 0.62087912, 0.62087912, 0.63003663])}
('The best XGBoost Balanced Accuracy is ', 61.961300898685636)
logistic Regression 

{'penalty': 'l1', 'C': 4}
{'std_train_score': array([0.00544334, 0.00595419, 0.00506128, 0.00564843, 0.00540136,
       0.00592938, 0.00604932, 0.00526739]), 'split4_test_score': array([0.64889706, 0.64889706, 0.65625   , 0.65808824, 0.65808824,
       0.65625   , 0.65625   , 0.65073529]), 'split0_train_score': array([0.64662689, 0.64754475, 0.64479119, 0.64662689, 0.64570904,
       0.64570904, 0.64616797, 0.64662689]), 'rank_test_score': array([7, 6, 3, 4, 2, 7, 1, 4]), 'split2_train_score': array([0.63165138, 0.63073394, 0.63165138, 0.63211009, 0.63119266,
       0.63027523, 0.62981651, 0.63165138]), 'std_score_time': array([4.89920847e-04, 3.99923339e-04, 4.00066376e-04, 4.00042545e-04,
       4.00018706e-04, 1.16800773e-07, 4.89940316e-04, 4.89940316e-04]), 'split4_train_score': array([0.63365429, 0.63319578, 0.63319578, 0.63136176, 0.63182027,
       0.63227877, 0.63090326, 0.63319578]), 'split2_test_score': array([0.64587156, 0.64036697, 0.64587156, 0.6440367 , 0.6440367 ,
       0.64220183, 0.6440367 , 0.64220183]), 'mean_score_time': array([0.00160007, 0.00120001, 0.00119996, 0.00120001, 0.00179996,
       0.00100002, 0.00140004, 0.00159998]), 'mean_fit_time': array([0.14679995, 0.02979999, 0.11700001, 0.02940001, 0.15640006,
       0.02919998, 0.13340001, 0.03059998]), 'split3_train_score': array([0.64007336, 0.64053187, 0.63961486, 0.64053187, 0.63869785,
       0.64282439, 0.63961486, 0.63915635]), 'param_C': masked_array(data=[1, 1, 2, 2, 3, 3, 4, 4],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2'],
             mask=[False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'std_test_score': array([0.0184501 , 0.01594536, 0.01996671, 0.01985625, 0.01982739,
       0.0189423 , 0.01852551, 0.01764908]), 'split1_train_score': array([0.64157871, 0.64020193, 0.64203763, 0.63836622, 0.639743  ,
       0.63882515, 0.63882515, 0.6379073 ]), 'split0_test_score': array([0.60622711, 0.60805861, 0.60805861, 0.60622711, 0.60805861,
       0.60989011, 0.60805861, 0.60622711]), 'mean_test_score': array([0.62715596, 0.62825688, 0.62972477, 0.62862385, 0.63045872,
       0.62715596, 0.63082569, 0.62862385]), 'params': [{'penalty': 'l1', 'C': 1}, {'penalty': 'l2', 'C': 1}, {'penalty': 'l1', 'C': 2}, {'penalty': 'l2', 'C': 2}, {'penalty': 'l1', 'C': 3}, {'penalty': 'l2', 'C': 3}, {'penalty': 'l1', 'C': 4}, {'penalty': 'l2', 'C': 4}], 'std_fit_time': array([0.04474996, 0.00627383, 0.05000804, 0.0044091 , 0.01383615,
       0.00337049, 0.0514377 , 0.00488267]), 'split3_test_score': array([0.62867647, 0.63235294, 0.63235294, 0.625     , 0.63419118,
       0.61948529, 0.63419118, 0.63419118]), 'mean_train_score': array([0.63871692, 0.63844165, 0.63825817, 0.63779937, 0.63743256,
       0.63798252, 0.63706555, 0.63770754]), 'split1_test_score': array([0.60622711, 0.61172161, 0.60622711, 0.60989011, 0.60805861,
       0.60805861, 0.61172161, 0.60989011])}
('The best Logistic Balanced Accuracy is ', 62.631216884751616)
('Best picked model is', 'Logistic')
